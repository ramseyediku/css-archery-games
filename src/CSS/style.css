@import url("https://fonts.googleapis.com/css2?family=Fredoka:wdth,wght@75..125,300..700&display=swap");
:root {
  --body-font-family: "Fredoka", sans-serif;
  --heading-font-family: "Fredoka", sans-serif;
  --body-line-height: 1.5;
  --heading-line-height: 1.1;
}

/* applying box-sizing of border-box */
*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
html:focus-within {
  /* add smooth scroll to the page */
  scroll-behavior: smooth;
  hanging-punctuation: first last;
  /* new feature that allows transition/animations using keywords like auto,cover,none,fit-content etc.. */
  interpolate-size: allow-keywords;
  /* Prevent font size inflation on iOS */
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

body {
  margin: 0;
  min-height: 100vh;
  line-height: var(--body-line-height);
  font-family: var(--body-font-family);
  /* text renders faster on a webpage, switch this to 'optimizeLegibility' for nicer looking text at the detriment of rendering times */
  text-rendering: optimizeSpeed;
  -webkit-font-smoothing: antialiased;
}

/* makes titles and headings wrap in a readable way */
:where(h1, h2, h3, h4) {
  text-wrap: balance;
  line-height: var(--heading-line-height);
  font-family: var(--heading-font-family);
}

/* makes paragraphs wrap in a readable way, and prevents paragraphs being too long */
:where(p, li, figcaption) {
  text-wrap: pretty;
  max-width: 75ch;
}

/* make text brake at words instead of letters at new lines */
:where(p, h1, h2, h3, h4, h5, h6) {
  overflow-wrap: break-word;
}

/* remove bottom border from these elements to prevent double margins and have better control over flow of the page */
:where(h1, h2, h3, h4, p, figure, blockquote, dl, dd) {
  margin-block-end: 0;
}

/* removing default styling from lists with classes */
:where(ul, ol):where([class]) {
  list-style: "";
}

/* make media elements block-level */
:where(img, svg, video, canvas, audio) {
  display: block;
  max-width: 100%;
}

/* make font elements inherit font styles (they do not by default) */
:where(input, button, textarea, select) {
  font-family: inherit;
  font-size: inherit;
}

/* give all non disabled buttons a pointer cursor */
:where(input[type=submit], button):not(:disabled) {
  cursor: pointer;
}

/* removing default link styling from anchor tags with classes */
a {
  text-decoration: none;
}
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* give some height to textareas with no rows */
textarea:not([rows]) {
  min-height: 10rem;
}

/* lines up string numbers of the same lenght to take the same space */
td,
math,
time[datetime*=":"] {
  font-variant-numeric: tabular-nums;
}

/* add some marging to anchored elements */
:target {
  scroll-margin-block: 5ex;
}

/* Remove all animations and transitions for users who disable them */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after,
  *:focus-within {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:root {
  --clr-dark: hsl(240, 4%, 16%);
  --clr-dark-console: hsl(0, 0%, 11%);
  --clr-light: hsl(0, 0%, 100%);
  --clr-light-bg: hsl(0, 0%, 99%);
  --clr-accent: hsl(0, 100%, 63%);
  --border-radius: 35px;
  --box-shadow: hsl(240, 30%, 28%, 0.25) 0px 50px 100px -20px,
    hsl(0, 0%, 0%, 0.3) 0px 30px 60px -30px;
  --text-shadow-light: 2px 2px 2px var(--clr-light);
  --text-shadow-accent: 2px 2px 2px var(--clr-accent);
}

@keyframes appear {
  from {
    scale: 0;
  }
  to {
    scale: 1;
  }
}
@keyframes disappear {
  from {
    scale: 1;
  }
  to {
    scale: 0;
  }
}
body {
  background-color: var(--clr-light-bg);
  display: grid;
  place-items: center;
  height: 99vh;
  counter-reset: score;
}

input[name=screen] {
  visibility: hidden;
}
input[name=screen]#screen-1:checked ~ .console__screen--screen-1, input[name=screen]#screen-2:checked ~ .console__screen--screen-2, input[name=screen]#screen-3:checked ~ .console__screen--screen-3 {
  opacity: 1;
  pointer-events: revert;
}
input[name=screen]#screen-2:checked ~ .console__screen--screen-2 .target {
  animation-play-state: running;
}
input[name=screen]#screen-2:checked ~ .console__screen--screen-3 {
  display: grid;
  place-items: center;
  animation: screenEnd 0.5s 13.75s forwards;
}
@keyframes screenEnd {
  100% {
    opacity: 1;
    pointer-events: revert;
  }
}

.console {
  width: 60%;
  min-height: 60%;
  margin-inline: auto;
  border-radius: var(--border-radius);
  background-color: var(--clr-dark-console);
  padding: 1em;
  position: relative;
  box-shadow: var(--box-shadow);
}
.console__screen {
  position: absolute;
  inset: 2.5%;
  background-image: url("../IMG/bgc.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  border-radius: calc(var(--border-radius) / 2);
  opacity: 0;
  pointer-events: none;
}
.console__screen--screen-1 {
  display: grid;
  place-items: center;
}
.console__screen__game {
  position: relative;
  width: 100%;
  height: 100%;
}

.target {
  --target-width: 2em;
  --target-spacing: 5px;
  position: absolute;
  appearance: none;
  background-color: var(--clr-accent);
  width: var(--target-width);
  cursor: pointer;
  aspect-ratio: 1/1;
  border-radius: 50%;
  margin: 0;
  box-shadow: var(--clr-light) 0px 0px 0px var(--target-spacing), var(--clr-accent) 0px 0px 0px calc(var(--target-spacing) * 2), var(--clr-light) 0px 0px 0px calc(var(--target-spacing) * 3), var(--clr-accent) 0px 0px 0px calc(var(--target-spacing) * 4);
  left: var(--x-pos);
  bottom: var(--y-pos);
  scale: 0;
}
.target:nth-child(1) {
  --x-pos: 85%;
  --y-pos: 83%;
  animation: appear 1s linear 1s forwards;
  animation-play-state: paused;
}
.target:nth-child(2) {
  --x-pos: 42%;
  --y-pos: 28%;
  animation: appear 1s linear 2.75s forwards;
  animation-play-state: paused;
}
.target:nth-child(3) {
  --x-pos: 66%;
  --y-pos: 39%;
  animation: appear 1s linear 3.75s forwards;
  animation-play-state: paused;
}
.target:nth-child(4) {
  --x-pos: 39%;
  --y-pos: 33%;
  animation: appear 1s linear 4.75s forwards;
  animation-play-state: paused;
}
.target:nth-child(5) {
  --x-pos: 72%;
  --y-pos: 4%;
  animation: appear 1s linear 5.75s forwards;
  animation-play-state: paused;
}
.target:nth-child(6) {
  --x-pos: 66%;
  --y-pos: 85%;
  animation: appear 1s linear 6.75s forwards;
  animation-play-state: paused;
}
.target:nth-child(7) {
  --x-pos: 22%;
  --y-pos: 13%;
  animation: appear 1s linear 7.75s forwards;
  animation-play-state: paused;
}
.target:nth-child(8) {
  --x-pos: 41%;
  --y-pos: 31%;
  animation: appear 1s linear 8.75s forwards;
  animation-play-state: paused;
}
.target:nth-child(9) {
  --x-pos: 50%;
  --y-pos: 29%;
  animation: appear 1s linear 9.75s forwards;
  animation-play-state: paused;
}
.target:nth-child(10) {
  --x-pos: 54%;
  --y-pos: 39%;
  animation: appear 1s linear 10.75s forwards;
  animation-play-state: paused;
}
.target:checked {
  animation-play-state: paused;
  counter-increment: score;
  opacity: 0;
}

.logo {
  width: 5em;
  position: absolute;
  top: 1%;
  left: 1%;
}

.title {
  color: var(--clr-accent);
  margin: 0;
  text-align: center;
  margin-bottom: 1em;
  font-size: calc(2.25rem + 3vmin);
  text-shadow: var(--text-shadow-light);
}

.button {
  margin: 0;
  display: block;
  background-color: var(--clr-accent);
  color: var(--clr-light);
  border-radius: var(--border-radius);
  padding: 0.9em 2.9em;
  font-size: calc(0.65rem + 0.75vmin);
  cursor: pointer;
  outline: 3px solid var(--clr-light);
  width: max-content;
  margin-inline: auto;
  font-weight: 600;
  border: 0;
}

.score {
  font-weight: 700;
  font-size: 3rem;
  color: var(--clr-light);
  text-shadow: var(--text-shadow-accent);
}
.score::after {
  content: " " counter(score) "/10. Well done!";
}

/*# sourceMappingURL=style.css.map */
